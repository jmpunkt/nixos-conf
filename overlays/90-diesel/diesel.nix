# Generated by carnix 0.9.8: carnix generate-nix --src .
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# advanced-blog-cli-0.1.0

    crates.advanced_blog_cli."0.1.0" = deps: { features?(features_.advanced_blog_cli."0.1.0" deps {}) }: buildRustCrate {
      crateName = "advanced-blog-cli";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/postgres/advanced-blog-cli" ] ./.;
      workspace_member = "examples/postgres/advanced-blog-cli";
      dependencies = mapFeatures features ([
        (cratesIO.crates."bcrypt"."${deps."advanced_blog_cli"."0.1.0"."bcrypt"}" deps)
        (cratesIO.crates."chrono"."${deps."advanced_blog_cli"."0.1.0"."chrono"}" deps)
        (cratesIO.crates."diesel"."${deps."advanced_blog_cli"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."advanced_blog_cli"."0.1.0"."dotenv"}" deps)
        (cratesIO.crates."structopt"."${deps."advanced_blog_cli"."0.1.0"."structopt"}" deps)
        (cratesIO.crates."structopt_derive"."${deps."advanced_blog_cli"."0.1.0"."structopt_derive"}" deps)
        (cratesIO.crates."tempfile"."${deps."advanced_blog_cli"."0.1.0"."tempfile"}" deps)
      ]);
    };
    features_.advanced_blog_cli."0.1.0" = deps: f: updateFeatures f (rec {
      advanced_blog_cli."0.1.0".default = (f.advanced_blog_cli."0.1.0".default or true);
      bcrypt."${deps.advanced_blog_cli."0.1.0".bcrypt}".default = true;
      chrono."${deps.advanced_blog_cli."0.1.0".chrono}".default = true;
      diesel = fold recursiveUpdate {} [
        { "${deps.advanced_blog_cli."0.1.0".diesel}"."chrono" = true; }
        { "${deps.advanced_blog_cli."0.1.0".diesel}"."postgres" = true; }
        { "${deps.advanced_blog_cli."0.1.0".diesel}".default = true; }
      ];
      dotenv."${deps.advanced_blog_cli."0.1.0".dotenv}".default = true;
      structopt."${deps.advanced_blog_cli."0.1.0".structopt}".default = true;
      structopt_derive."${deps.advanced_blog_cli."0.1.0".structopt_derive}".default = true;
      tempfile."${deps.advanced_blog_cli."0.1.0".tempfile}".default = true;
    }) [
      (cratesIO.features_.bcrypt."${deps."advanced_blog_cli"."0.1.0"."bcrypt"}" deps)
      (cratesIO.features_.chrono."${deps."advanced_blog_cli"."0.1.0"."chrono"}" deps)
      (cratesIO.features_.diesel."${deps."advanced_blog_cli"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."advanced_blog_cli"."0.1.0"."dotenv"}" deps)
      (cratesIO.features_.structopt."${deps."advanced_blog_cli"."0.1.0"."structopt"}" deps)
      (cratesIO.features_.structopt_derive."${deps."advanced_blog_cli"."0.1.0"."structopt_derive"}" deps)
      (cratesIO.features_.tempfile."${deps."advanced_blog_cli"."0.1.0"."tempfile"}" deps)
    ];


# end
# all_about_inserts-0.1.0

    crates.all_about_inserts."0.1.0" = deps: { features?(features_.all_about_inserts."0.1.0" deps {}) }: buildRustCrate {
      crateName = "all_about_inserts";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/postgres/all_about_inserts" ] ./.;
      workspace_member = "examples/postgres/all_about_inserts";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."all_about_inserts"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."serde"."${deps."all_about_inserts"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."all_about_inserts"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_json"."${deps."all_about_inserts"."0.1.0"."serde_json"}" deps)
      ]);
    };
    features_.all_about_inserts."0.1.0" = deps: f: updateFeatures f (rec {
      all_about_inserts."0.1.0".default = (f.all_about_inserts."0.1.0".default or true);
      diesel = fold recursiveUpdate {} [
        { "${deps.all_about_inserts."0.1.0".diesel}"."postgres" = true; }
        { "${deps.all_about_inserts."0.1.0".diesel}".default = true; }
      ];
      serde."${deps.all_about_inserts."0.1.0".serde}".default = true;
      serde_derive."${deps.all_about_inserts."0.1.0".serde_derive}".default = true;
      serde_json."${deps.all_about_inserts."0.1.0".serde_json}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."all_about_inserts"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.serde."${deps."all_about_inserts"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."all_about_inserts"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_json."${deps."all_about_inserts"."0.1.0"."serde_json"}" deps)
    ];


# end
# all_about_inserts_mysql-0.1.0

    crates.all_about_inserts_mysql."0.1.0" = deps: { features?(features_.all_about_inserts_mysql."0.1.0" deps {}) }: buildRustCrate {
      crateName = "all_about_inserts_mysql";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/mysql/all_about_inserts" ] ./.;
      workspace_member = "examples/mysql/all_about_inserts";
      dependencies = mapFeatures features ([
        (cratesIO.crates."chrono"."${deps."all_about_inserts_mysql"."0.1.0"."chrono"}" deps)
        (cratesIO.crates."diesel"."${deps."all_about_inserts_mysql"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."serde"."${deps."all_about_inserts_mysql"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."all_about_inserts_mysql"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_json"."${deps."all_about_inserts_mysql"."0.1.0"."serde_json"}" deps)
      ]);
    };
    features_.all_about_inserts_mysql."0.1.0" = deps: f: updateFeatures f (rec {
      all_about_inserts_mysql."0.1.0".default = (f.all_about_inserts_mysql."0.1.0".default or true);
      chrono."${deps.all_about_inserts_mysql."0.1.0".chrono}".default = true;
      diesel = fold recursiveUpdate {} [
        { "${deps.all_about_inserts_mysql."0.1.0".diesel}"."chrono" = true; }
        { "${deps.all_about_inserts_mysql."0.1.0".diesel}"."mysql" = true; }
        { "${deps.all_about_inserts_mysql."0.1.0".diesel}".default = true; }
      ];
      serde."${deps.all_about_inserts_mysql."0.1.0".serde}".default = true;
      serde_derive."${deps.all_about_inserts_mysql."0.1.0".serde_derive}".default = true;
      serde_json."${deps.all_about_inserts_mysql."0.1.0".serde_json}".default = true;
    }) [
      (cratesIO.features_.chrono."${deps."all_about_inserts_mysql"."0.1.0"."chrono"}" deps)
      (cratesIO.features_.diesel."${deps."all_about_inserts_mysql"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.serde."${deps."all_about_inserts_mysql"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."all_about_inserts_mysql"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_json."${deps."all_about_inserts_mysql"."0.1.0"."serde_json"}" deps)
    ];


# end
# all_about_inserts_sqlite-0.1.0

    crates.all_about_inserts_sqlite."0.1.0" = deps: { features?(features_.all_about_inserts_sqlite."0.1.0" deps {}) }: buildRustCrate {
      crateName = "all_about_inserts_sqlite";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/sqlite/all_about_inserts" ] ./.;
      workspace_member = "examples/sqlite/all_about_inserts";
      dependencies = mapFeatures features ([
        (cratesIO.crates."chrono"."${deps."all_about_inserts_sqlite"."0.1.0"."chrono"}" deps)
        (cratesIO.crates."diesel"."${deps."all_about_inserts_sqlite"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."serde"."${deps."all_about_inserts_sqlite"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."all_about_inserts_sqlite"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_json"."${deps."all_about_inserts_sqlite"."0.1.0"."serde_json"}" deps)
      ]);
    };
    features_.all_about_inserts_sqlite."0.1.0" = deps: f: updateFeatures f (rec {
      all_about_inserts_sqlite."0.1.0".default = (f.all_about_inserts_sqlite."0.1.0".default or true);
      chrono."${deps.all_about_inserts_sqlite."0.1.0".chrono}".default = true;
      diesel = fold recursiveUpdate {} [
        { "${deps.all_about_inserts_sqlite."0.1.0".diesel}"."chrono" = true; }
        { "${deps.all_about_inserts_sqlite."0.1.0".diesel}"."sqlite" = true; }
        { "${deps.all_about_inserts_sqlite."0.1.0".diesel}".default = true; }
      ];
      serde."${deps.all_about_inserts_sqlite."0.1.0".serde}".default = true;
      serde_derive."${deps.all_about_inserts_sqlite."0.1.0".serde_derive}".default = true;
      serde_json."${deps.all_about_inserts_sqlite."0.1.0".serde_json}".default = true;
    }) [
      (cratesIO.features_.chrono."${deps."all_about_inserts_sqlite"."0.1.0"."chrono"}" deps)
      (cratesIO.features_.diesel."${deps."all_about_inserts_sqlite"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.serde."${deps."all_about_inserts_sqlite"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."all_about_inserts_sqlite"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_json."${deps."all_about_inserts_sqlite"."0.1.0"."serde_json"}" deps)
    ];


# end
# all_about_updates-0.1.0

    crates.all_about_updates."0.1.0" = deps: { features?(features_.all_about_updates."0.1.0" deps {}) }: buildRustCrate {
      crateName = "all_about_updates";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/postgres/all_about_updates" ] ./.;
      workspace_member = "examples/postgres/all_about_updates";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."all_about_updates"."0.1.0"."diesel"}" deps)
      ]);
    };
    features_.all_about_updates."0.1.0" = deps: f: updateFeatures f (rec {
      all_about_updates."0.1.0".default = (f.all_about_updates."0.1.0".default or true);
      diesel = fold recursiveUpdate {} [
        { "${deps.all_about_updates."0.1.0".diesel}"."postgres" = true; }
        { "${deps.all_about_updates."0.1.0".diesel}".default = true; }
      ];
    }) [
      (cratesIO.features_.diesel."${deps."all_about_updates"."0.1.0"."diesel"}" deps)
    ];


# end
# diesel_cli-1.4.0

    crates.diesel_cli."1.4.0" = deps: { features?(features_.diesel_cli."1.4.0" deps {}) }: buildRustCrate {
      crateName = "diesel_cli";
      version = "1.4.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " diesel_cli" ] ./.;
      workspace_member = "diesel_cli";
      crateBin =
        [{  name = "diesel";  path = "src/main.rs"; }];
      dependencies = mapFeatures features ([
        (cratesIO.crates."chrono"."${deps."diesel_cli"."1.4.0"."chrono"}" deps)
        (cratesIO.crates."clap"."${deps."diesel_cli"."1.4.0"."clap"}" deps)
        (cratesIO.crates."diesel"."${deps."diesel_cli"."1.4.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_cli"."1.4.0"."dotenv"}" deps)
        (cratesIO.crates."heck"."${deps."diesel_cli"."1.4.0"."heck"}" deps)
        (cratesIO.crates."migrations_internals"."${deps."diesel_cli"."1.4.0"."migrations_internals"}" deps)
        (cratesIO.crates."serde"."${deps."diesel_cli"."1.4.0"."serde"}" deps)
        (cratesIO.crates."tempfile"."${deps."diesel_cli"."1.4.0"."tempfile"}" deps)
        (cratesIO.crates."toml"."${deps."diesel_cli"."1.4.0"."toml"}" deps)
      ]
        ++ (if features.diesel_cli."1.4.0".barrel or false then [ (cratesIO.crates.barrel."${deps."diesel_cli"."1.4.0".barrel}" deps) ] else [])
        ++ (if features.diesel_cli."1.4.0".libsqlite3-sys or false then [ (cratesIO.crates.libsqlite3_sys."${deps."diesel_cli"."1.4.0".libsqlite3_sys}" deps) ] else [])
        ++ (if features.diesel_cli."1.4.0".url or false then [ (cratesIO.crates.url."${deps."diesel_cli"."1.4.0".url}" deps) ] else []));
      features = mkFeatures (features."diesel_cli"."1.4.0" or {});
    };
    features_.diesel_cli."1.4.0" = deps: f: updateFeatures f (rec {
      barrel = fold recursiveUpdate {} [
        { "${deps.diesel_cli."1.4.0".barrel}"."diesel" = true; }
        { "${deps.diesel_cli."1.4.0".barrel}".default = true; }
      ];
      chrono."${deps.diesel_cli."1.4.0".chrono}".default = true;
      clap."${deps.diesel_cli."1.4.0".clap}".default = true;
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_cli."1.4.0".diesel}"."mysql" =
          (f.diesel."${deps.diesel_cli."1.4.0".diesel}"."mysql" or false) ||
          (diesel_cli."1.4.0"."mysql" or false) ||
          (f."diesel_cli"."1.4.0"."mysql" or false); }
        { "${deps.diesel_cli."1.4.0".diesel}"."postgres" =
          (f.diesel."${deps.diesel_cli."1.4.0".diesel}"."postgres" or false) ||
          (diesel_cli."1.4.0"."postgres" or false) ||
          (f."diesel_cli"."1.4.0"."postgres" or false); }
        { "${deps.diesel_cli."1.4.0".diesel}"."sqlite" =
          (f.diesel."${deps.diesel_cli."1.4.0".diesel}"."sqlite" or false) ||
          (diesel_cli."1.4.0"."sqlite" or false) ||
          (f."diesel_cli"."1.4.0"."sqlite" or false); }
        { "${deps.diesel_cli."1.4.0".diesel}".default = (f.diesel."${deps.diesel_cli."1.4.0".diesel}".default or false); }
      ];
      diesel_cli = fold recursiveUpdate {} [
        { "1.4.0".barrel =
          (f.diesel_cli."1.4.0".barrel or false) ||
          (f.diesel_cli."1.4.0".barrel-migrations or false) ||
          (diesel_cli."1.4.0"."barrel-migrations" or false); }
        { "1.4.0".default = (f.diesel_cli."1.4.0".default or true); }
        { "1.4.0".mysql =
          (f.diesel_cli."1.4.0".mysql or false) ||
          (f.diesel_cli."1.4.0".default or false) ||
          (diesel_cli."1.4.0"."default" or false); }
        { "1.4.0".postgres =
          (f.diesel_cli."1.4.0".postgres or false) ||
          (f.diesel_cli."1.4.0".default or false) ||
          (diesel_cli."1.4.0"."default" or false); }
        { "1.4.0".sqlite =
          (f.diesel_cli."1.4.0".sqlite or false) ||
          (f.diesel_cli."1.4.0".default or false) ||
          (diesel_cli."1.4.0"."default" or false) ||
          (f.diesel_cli."1.4.0".sqlite-bundled or false) ||
          (diesel_cli."1.4.0"."sqlite-bundled" or false); }
        { "1.4.0".url =
          (f.diesel_cli."1.4.0".url or false) ||
          (f.diesel_cli."1.4.0".mysql or false) ||
          (diesel_cli."1.4.0"."mysql" or false) ||
          (f.diesel_cli."1.4.0".postgres or false) ||
          (diesel_cli."1.4.0"."postgres" or false); }
        { "1.4.0".uses_information_schema =
          (f.diesel_cli."1.4.0".uses_information_schema or false) ||
          (f.diesel_cli."1.4.0".mysql or false) ||
          (diesel_cli."1.4.0"."mysql" or false) ||
          (f.diesel_cli."1.4.0".postgres or false) ||
          (diesel_cli."1.4.0"."postgres" or false); }
      ];
      dotenv."${deps.diesel_cli."1.4.0".dotenv}".default = true;
      heck."${deps.diesel_cli."1.4.0".heck}".default = true;
      libsqlite3_sys = fold recursiveUpdate {} [
        { "${deps.diesel_cli."1.4.0".libsqlite3_sys}"."bundled" =
          (f.libsqlite3_sys."${deps.diesel_cli."1.4.0".libsqlite3_sys}"."bundled" or false) ||
          (diesel_cli."1.4.0"."sqlite-bundled" or false) ||
          (f."diesel_cli"."1.4.0"."sqlite-bundled" or false); }
        { "${deps.diesel_cli."1.4.0".libsqlite3_sys}"."min_sqlite_version_3_7_16" = true; }
        { "${deps.diesel_cli."1.4.0".libsqlite3_sys}".default = true; }
      ];
      migrations_internals = fold recursiveUpdate {} [
        { "${deps.diesel_cli."1.4.0".migrations_internals}"."barrel" =
          (f.migrations_internals."${deps.diesel_cli."1.4.0".migrations_internals}"."barrel" or false) ||
          (diesel_cli."1.4.0"."barrel-migrations" or false) ||
          (f."diesel_cli"."1.4.0"."barrel-migrations" or false); }
        { "${deps.diesel_cli."1.4.0".migrations_internals}".default = true; }
      ];
      serde = fold recursiveUpdate {} [
        { "${deps.diesel_cli."1.4.0".serde}"."derive" = true; }
        { "${deps.diesel_cli."1.4.0".serde}".default = true; }
      ];
      tempfile."${deps.diesel_cli."1.4.0".tempfile}".default = true;
      toml."${deps.diesel_cli."1.4.0".toml}".default = true;
      url."${deps.diesel_cli."1.4.0".url}".default = true;
    }) [
      (cratesIO.features_.barrel."${deps."diesel_cli"."1.4.0"."barrel"}" deps)
      (cratesIO.features_.chrono."${deps."diesel_cli"."1.4.0"."chrono"}" deps)
      (cratesIO.features_.clap."${deps."diesel_cli"."1.4.0"."clap"}" deps)
      (cratesIO.features_.diesel."${deps."diesel_cli"."1.4.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_cli"."1.4.0"."dotenv"}" deps)
      (cratesIO.features_.heck."${deps."diesel_cli"."1.4.0"."heck"}" deps)
      (cratesIO.features_.libsqlite3_sys."${deps."diesel_cli"."1.4.0"."libsqlite3_sys"}" deps)
      (cratesIO.features_.migrations_internals."${deps."diesel_cli"."1.4.0"."migrations_internals"}" deps)
      (cratesIO.features_.serde."${deps."diesel_cli"."1.4.0"."serde"}" deps)
      (cratesIO.features_.tempfile."${deps."diesel_cli"."1.4.0"."tempfile"}" deps)
      (cratesIO.features_.toml."${deps."diesel_cli"."1.4.0"."toml"}" deps)
      (cratesIO.features_.url."${deps."diesel_cli"."1.4.0"."url"}" deps)
    ];


# end
# diesel_demo_step_1_mysql-0.1.0

    crates.diesel_demo_step_1_mysql."0.1.0" = deps: { features?(features_.diesel_demo_step_1_mysql."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_1_mysql";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/mysql/getting_started_step_1" ] ./.;
      workspace_member = "examples/mysql/getting_started_step_1";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_1_mysql"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_1_mysql"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_1_mysql."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_1_mysql."0.1.0".diesel}"."mysql" = true; }
        { "${deps.diesel_demo_step_1_mysql."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_1_mysql."0.1.0".default = (f.diesel_demo_step_1_mysql."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_1_mysql."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_1_mysql"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_1_mysql"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_1_pg-0.1.0

    crates.diesel_demo_step_1_pg."0.1.0" = deps: { features?(features_.diesel_demo_step_1_pg."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_1_pg";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/postgres/getting_started_step_1" ] ./.;
      workspace_member = "examples/postgres/getting_started_step_1";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_1_pg"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_1_pg"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_1_pg."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_1_pg."0.1.0".diesel}"."postgres" = true; }
        { "${deps.diesel_demo_step_1_pg."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_1_pg."0.1.0".default = (f.diesel_demo_step_1_pg."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_1_pg."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_1_pg"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_1_pg"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_1_sqlite-0.1.0

    crates.diesel_demo_step_1_sqlite."0.1.0" = deps: { features?(features_.diesel_demo_step_1_sqlite."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_1_sqlite";
      version = "0.1.0";
      authors = [ "Taryn Hill <taryn@phrohdoh.com>" ];
      src = include [ "Cargo.toml" " examples/sqlite/getting_started_step_1" ] ./.;
      workspace_member = "examples/sqlite/getting_started_step_1";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_1_sqlite"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_1_sqlite"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_1_sqlite."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_1_sqlite."0.1.0".diesel}"."sqlite" = true; }
        { "${deps.diesel_demo_step_1_sqlite."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_1_sqlite."0.1.0".default = (f.diesel_demo_step_1_sqlite."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_1_sqlite."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_1_sqlite"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_1_sqlite"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_2_mysql-0.1.0

    crates.diesel_demo_step_2_mysql."0.1.0" = deps: { features?(features_.diesel_demo_step_2_mysql."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_2_mysql";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/mysql/getting_started_step_2" ] ./.;
      workspace_member = "examples/mysql/getting_started_step_2";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_2_mysql"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_2_mysql"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_2_mysql."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_2_mysql."0.1.0".diesel}"."mysql" = true; }
        { "${deps.diesel_demo_step_2_mysql."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_2_mysql."0.1.0".default = (f.diesel_demo_step_2_mysql."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_2_mysql."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_2_mysql"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_2_mysql"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_2_pg-0.1.0

    crates.diesel_demo_step_2_pg."0.1.0" = deps: { features?(features_.diesel_demo_step_2_pg."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_2_pg";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/postgres/getting_started_step_2" ] ./.;
      workspace_member = "examples/postgres/getting_started_step_2";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_2_pg"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_2_pg"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_2_pg."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_2_pg."0.1.0".diesel}"."postgres" = true; }
        { "${deps.diesel_demo_step_2_pg."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_2_pg."0.1.0".default = (f.diesel_demo_step_2_pg."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_2_pg."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_2_pg"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_2_pg"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_2_sqlite-0.1.0

    crates.diesel_demo_step_2_sqlite."0.1.0" = deps: { features?(features_.diesel_demo_step_2_sqlite."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_2_sqlite";
      version = "0.1.0";
      authors = [ "Taryn Hill <taryn@phrohdoh.com>" ];
      src = include [ "Cargo.toml" " examples/sqlite/getting_started_step_2" ] ./.;
      workspace_member = "examples/sqlite/getting_started_step_2";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_2_sqlite"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_2_sqlite"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_2_sqlite."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_2_sqlite."0.1.0".diesel}"."sqlite" = true; }
        { "${deps.diesel_demo_step_2_sqlite."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_2_sqlite."0.1.0".default = (f.diesel_demo_step_2_sqlite."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_2_sqlite."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_2_sqlite"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_2_sqlite"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_3_mysql-0.1.0

    crates.diesel_demo_step_3_mysql."0.1.0" = deps: { features?(features_.diesel_demo_step_3_mysql."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_3_mysql";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/mysql/getting_started_step_3" ] ./.;
      workspace_member = "examples/mysql/getting_started_step_3";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_3_mysql"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_3_mysql"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_3_mysql."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_3_mysql."0.1.0".diesel}"."mysql" = true; }
        { "${deps.diesel_demo_step_3_mysql."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_3_mysql."0.1.0".default = (f.diesel_demo_step_3_mysql."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_3_mysql."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_3_mysql"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_3_mysql"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_3_pg-0.1.0

    crates.diesel_demo_step_3_pg."0.1.0" = deps: { features?(features_.diesel_demo_step_3_pg."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_3_pg";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " examples/postgres/getting_started_step_3" ] ./.;
      workspace_member = "examples/postgres/getting_started_step_3";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_3_pg"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_3_pg"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_3_pg."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_3_pg."0.1.0".diesel}"."postgres" = true; }
        { "${deps.diesel_demo_step_3_pg."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_3_pg."0.1.0".default = (f.diesel_demo_step_3_pg."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_3_pg."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_3_pg"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_3_pg"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_demo_step_3_sqlite-0.1.0

    crates.diesel_demo_step_3_sqlite."0.1.0" = deps: { features?(features_.diesel_demo_step_3_sqlite."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_demo_step_3_sqlite";
      version = "0.1.0";
      authors = [ "Taryn Hill <taryn@phrohdoh.com>" ];
      src = include [ "Cargo.toml" " examples/sqlite/getting_started_step_3" ] ./.;
      workspace_member = "examples/sqlite/getting_started_step_3";
      dependencies = mapFeatures features ([
        (cratesIO.crates."diesel"."${deps."diesel_demo_step_3_sqlite"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_demo_step_3_sqlite"."0.1.0"."dotenv"}" deps)
      ]);
    };
    features_.diesel_demo_step_3_sqlite."0.1.0" = deps: f: updateFeatures f (rec {
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_demo_step_3_sqlite."0.1.0".diesel}"."sqlite" = true; }
        { "${deps.diesel_demo_step_3_sqlite."0.1.0".diesel}".default = true; }
      ];
      diesel_demo_step_3_sqlite."0.1.0".default = (f.diesel_demo_step_3_sqlite."0.1.0".default or true);
      dotenv."${deps.diesel_demo_step_3_sqlite."0.1.0".dotenv}".default = true;
    }) [
      (cratesIO.features_.diesel."${deps."diesel_demo_step_3_sqlite"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_demo_step_3_sqlite"."0.1.0"."dotenv"}" deps)
    ];


# end
# diesel_tests-0.1.0

    crates.diesel_tests."0.1.0" = deps: { features?(features_.diesel_tests."0.1.0" deps {}) }: buildRustCrate {
      crateName = "diesel_tests";
      version = "0.1.0";
      authors = [ "Sean Griffin <sean@seantheprogrammer.com>" ];
      src = include [ "Cargo.toml" " diesel_tests" ] ./.;
      workspace_member = "diesel_tests";
      build = "build.rs";
      dependencies = mapFeatures features ([
        (cratesIO.crates."assert_matches"."${deps."diesel_tests"."0.1.0"."assert_matches"}" deps)
        (cratesIO.crates."bigdecimal"."${deps."diesel_tests"."0.1.0"."bigdecimal"}" deps)
        (cratesIO.crates."chrono"."${deps."diesel_tests"."0.1.0"."chrono"}" deps)
        (crates."diesel"."${deps."diesel_tests"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."diesel_infer_schema"."${deps."diesel_tests"."0.1.0"."diesel_infer_schema"}" deps)
        (cratesIO.crates."diesel_migrations"."${deps."diesel_tests"."0.1.0"."diesel_migrations"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_tests"."0.1.0"."dotenv"}" deps)
        (cratesIO.crates."ipnetwork"."${deps."diesel_tests"."0.1.0"."ipnetwork"}" deps)
        (cratesIO.crates."quickcheck"."${deps."diesel_tests"."0.1.0"."quickcheck"}" deps)
        (cratesIO.crates."serde_json"."${deps."diesel_tests"."0.1.0"."serde_json"}" deps)
        (cratesIO.crates."uuid"."${deps."diesel_tests"."0.1.0"."uuid"}" deps)
      ]);

      buildDependencies = mapFeatures features ([
        (crates."diesel"."${deps."diesel_tests"."0.1.0"."diesel"}" deps)
        (cratesIO.crates."diesel_migrations"."${deps."diesel_tests"."0.1.0"."diesel_migrations"}" deps)
        (cratesIO.crates."dotenv"."${deps."diesel_tests"."0.1.0"."dotenv"}" deps)
      ]);
      features = mkFeatures (features."diesel_tests"."0.1.0" or {});
    };
    features_.diesel_tests."0.1.0" = deps: f: updateFeatures f (rec {
      assert_matches."${deps.diesel_tests."0.1.0".assert_matches}".default = true;
      bigdecimal."${deps.diesel_tests."0.1.0".bigdecimal}".default = true;
      chrono."${deps.diesel_tests."0.1.0".chrono}".default = true;
      diesel = fold recursiveUpdate {} [
        { "${deps.diesel_tests."0.1.0".diesel}"."chrono" = true; }
        { "${deps.diesel_tests."0.1.0".diesel}"."mysql" =
          (f.diesel."${deps.diesel_tests."0.1.0".diesel}"."mysql" or false) ||
          (diesel_tests."0.1.0"."mysql" or false) ||
          (f."diesel_tests"."0.1.0"."mysql" or false); }
        { "${deps.diesel_tests."0.1.0".diesel}"."network-address" = true; }
        { "${deps.diesel_tests."0.1.0".diesel}"."numeric" = true; }
        { "${deps.diesel_tests."0.1.0".diesel}"."postgres" =
          (f.diesel."${deps.diesel_tests."0.1.0".diesel}"."postgres" or false) ||
          (diesel_tests."0.1.0"."postgres" or false) ||
          (f."diesel_tests"."0.1.0"."postgres" or false); }
        { "${deps.diesel_tests."0.1.0".diesel}"."quickcheck" = true; }
        { "${deps.diesel_tests."0.1.0".diesel}"."serde_json" = true; }
        { "${deps.diesel_tests."0.1.0".diesel}"."sqlite" =
          (f.diesel."${deps.diesel_tests."0.1.0".diesel}"."sqlite" or false) ||
          (diesel_tests."0.1.0"."sqlite" or false) ||
          (f."diesel_tests"."0.1.0"."sqlite" or false); }
        { "${deps.diesel_tests."0.1.0".diesel}"."unstable" =
          (f.diesel."${deps.diesel_tests."0.1.0".diesel}"."unstable" or false) ||
          (diesel_tests."0.1.0"."unstable" or false) ||
          (f."diesel_tests"."0.1.0"."unstable" or false); }
        { "${deps.diesel_tests."0.1.0".diesel}"."uuid" = true; }
        { "${deps.diesel_tests."0.1.0".diesel}"."with-deprecated" = true; }
        { "${deps.diesel_tests."0.1.0".diesel}".default = (f.diesel."${deps.diesel_tests."0.1.0".diesel}".default or false); }
      ];
      diesel_infer_schema = fold recursiveUpdate {} [
        { "${deps.diesel_tests."0.1.0".diesel_infer_schema}"."mysql" =
          (f.diesel_infer_schema."${deps.diesel_tests."0.1.0".diesel_infer_schema}"."mysql" or false) ||
          (diesel_tests."0.1.0"."mysql" or false) ||
          (f."diesel_tests"."0.1.0"."mysql" or false); }
        { "${deps.diesel_tests."0.1.0".diesel_infer_schema}"."postgres" =
          (f.diesel_infer_schema."${deps.diesel_tests."0.1.0".diesel_infer_schema}"."postgres" or false) ||
          (diesel_tests."0.1.0"."postgres" or false) ||
          (f."diesel_tests"."0.1.0"."postgres" or false); }
        { "${deps.diesel_tests."0.1.0".diesel_infer_schema}"."sqlite" =
          (f.diesel_infer_schema."${deps.diesel_tests."0.1.0".diesel_infer_schema}"."sqlite" or false) ||
          (diesel_tests."0.1.0"."sqlite" or false) ||
          (f."diesel_tests"."0.1.0"."sqlite" or false); }
        { "${deps.diesel_tests."0.1.0".diesel_infer_schema}".default = true; }
      ];
      diesel_migrations."${deps.diesel_tests."0.1.0".diesel_migrations}".default = true;
      diesel_tests."0.1.0".default = (f.diesel_tests."0.1.0".default or true);
      dotenv."${deps.diesel_tests."0.1.0".dotenv}".default = true;
      ipnetwork."${deps.diesel_tests."0.1.0".ipnetwork}".default = true;
      quickcheck = fold recursiveUpdate {} [
        { "${deps.diesel_tests."0.1.0".quickcheck}"."unstable" = true; }
        { "${deps.diesel_tests."0.1.0".quickcheck}".default = true; }
      ];
      serde_json."${deps.diesel_tests."0.1.0".serde_json}".default = true;
      uuid."${deps.diesel_tests."0.1.0".uuid}".default = true;
    }) [
      (cratesIO.features_.assert_matches."${deps."diesel_tests"."0.1.0"."assert_matches"}" deps)
      (cratesIO.features_.bigdecimal."${deps."diesel_tests"."0.1.0"."bigdecimal"}" deps)
      (cratesIO.features_.chrono."${deps."diesel_tests"."0.1.0"."chrono"}" deps)
      (features_.diesel."${deps."diesel_tests"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.diesel_infer_schema."${deps."diesel_tests"."0.1.0"."diesel_infer_schema"}" deps)
      (cratesIO.features_.diesel_migrations."${deps."diesel_tests"."0.1.0"."diesel_migrations"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_tests"."0.1.0"."dotenv"}" deps)
      (cratesIO.features_.ipnetwork."${deps."diesel_tests"."0.1.0"."ipnetwork"}" deps)
      (cratesIO.features_.quickcheck."${deps."diesel_tests"."0.1.0"."quickcheck"}" deps)
      (cratesIO.features_.serde_json."${deps."diesel_tests"."0.1.0"."serde_json"}" deps)
      (cratesIO.features_.uuid."${deps."diesel_tests"."0.1.0"."uuid"}" deps)
      (features_.diesel."${deps."diesel_tests"."0.1.0"."diesel"}" deps)
      (cratesIO.features_.diesel_migrations."${deps."diesel_tests"."0.1.0"."diesel_migrations"}" deps)
      (cratesIO.features_.dotenv."${deps."diesel_tests"."0.1.0"."dotenv"}" deps)
    ];


# end

  };

  advanced_blog_cli = crates.crates.advanced_blog_cli."0.1.0" deps;
  all_about_inserts = crates.crates.all_about_inserts."0.1.0" deps;
  all_about_inserts_mysql = crates.crates.all_about_inserts_mysql."0.1.0" deps;
  all_about_inserts_sqlite = crates.crates.all_about_inserts_sqlite."0.1.0" deps;
  all_about_updates = crates.crates.all_about_updates."0.1.0" deps;
  diesel = crates.crates.diesel."1.4.2" deps;
  diesel_cli = crates.crates.diesel_cli."1.4.0" deps;
  diesel_demo_step_1_mysql = crates.crates.diesel_demo_step_1_mysql."0.1.0" deps;
  diesel_demo_step_1_pg = crates.crates.diesel_demo_step_1_pg."0.1.0" deps;
  diesel_demo_step_1_sqlite = crates.crates.diesel_demo_step_1_sqlite."0.1.0" deps;
  diesel_demo_step_2_mysql = crates.crates.diesel_demo_step_2_mysql."0.1.0" deps;
  diesel_demo_step_2_pg = crates.crates.diesel_demo_step_2_pg."0.1.0" deps;
  diesel_demo_step_2_sqlite = crates.crates.diesel_demo_step_2_sqlite."0.1.0" deps;
  diesel_demo_step_3_mysql = crates.crates.diesel_demo_step_3_mysql."0.1.0" deps;
  diesel_demo_step_3_pg = crates.crates.diesel_demo_step_3_pg."0.1.0" deps;
  diesel_demo_step_3_sqlite = crates.crates.diesel_demo_step_3_sqlite."0.1.0" deps;
  diesel_derives = crates.crates.diesel_derives."1.4.0" deps;
  diesel_migrations = crates.crates.diesel_migrations."1.4.0" deps;
  diesel_tests = crates.crates.diesel_tests."0.1.0" deps;
  migrations_internals = crates.crates.migrations_internals."1.4.0" deps;
  migrations_macros = crates.crates.migrations_macros."1.4.0" deps;
  __all = [ (advanced_blog_cli {}) (all_about_inserts {}) (all_about_inserts_mysql {}) (all_about_inserts_sqlite {}) (all_about_updates {}) (diesel {}) (diesel_cli {}) (diesel_demo_step_1_mysql {}) (diesel_demo_step_1_pg {}) (diesel_demo_step_1_sqlite {}) (diesel_demo_step_2_mysql {}) (diesel_demo_step_2_pg {}) (diesel_demo_step_2_sqlite {}) (diesel_demo_step_3_mysql {}) (diesel_demo_step_3_pg {}) (diesel_demo_step_3_sqlite {}) (diesel_derives {}) (diesel_migrations {}) (diesel_tests {}) (migrations_internals {}) (migrations_macros {}) ];
  deps.advanced_blog_cli."0.1.0" = {
    bcrypt = "0.1.6";
    chrono = "0.4.6";
    diesel = "1.4.2";
    dotenv = "0.10.1";
    structopt = "0.1.7";
    structopt_derive = "0.1.6";
    tempfile = "2.2.0";
  };
  deps.aho_corasick."0.5.3" = {
    memchr = "0.1.11";
  };
  deps.aho_corasick."0.6.10" = {
    memchr = "2.2.0";
  };
  deps.all_about_inserts."0.1.0" = {
    diesel = "1.4.2";
    serde = "1.0.93";
    serde_derive = "1.0.93";
    serde_json = "1.0.39";
  };
  deps.all_about_inserts_mysql."0.1.0" = {
    chrono = "0.4.6";
    diesel = "1.4.2";
    serde = "1.0.93";
    serde_derive = "1.0.93";
    serde_json = "1.0.39";
  };
  deps.all_about_inserts_sqlite."0.1.0" = {
    chrono = "0.4.6";
    diesel = "1.4.2";
    serde = "1.0.93";
    serde_derive = "1.0.93";
    serde_json = "1.0.39";
  };
  deps.all_about_updates."0.1.0" = {
    diesel = "1.4.2";
  };
  deps.ansi_term."0.11.0" = {
    winapi = "0.3.7";
  };
  deps.assert_matches."1.3.0" = {};
  deps.atty."0.2.11" = {
    termion = "1.5.3";
    libc = "0.2.58";
    winapi = "0.3.7";
  };
  deps.autocfg."0.1.4" = {};
  deps.backtrace."0.3.31" = {
    backtrace_sys = "0.1.28";
    cfg_if = "0.1.9";
    libc = "0.2.58";
    rustc_demangle = "0.1.15";
    autocfg = "0.1.4";
  };
  deps.backtrace_sys."0.1.28" = {
    libc = "0.2.58";
    cc = "1.0.37";
  };
  deps.barrel."0.6.2" = {
    tempdir = "0.3.7";
  };
  deps.base64."0.9.3" = {
    byteorder = "1.3.2";
    safemem = "0.3.0";
  };
  deps.bcrypt."0.1.6" = {
    base64 = "0.9.3";
    lazy_static = "1.3.0";
    rand = "0.4.6";
    rust_crypto = "0.2.36";
  };
  deps.bigdecimal."0.1.0" = {
    num_bigint = "0.2.2";
    num_integer = "0.1.41";
    num_traits = "0.2.8";
  };
  deps.bitflags."1.1.0" = {};
  deps.byteorder."1.3.2" = {};
  deps.cc."1.0.37" = {};
  deps.cfg_if."0.1.9" = {};
  deps.chrono."0.4.6" = {
    num_integer = "0.1.41";
    num_traits = "0.2.8";
    time = "0.1.42";
  };
  deps.clap."2.33.0" = {
    atty = "0.2.11";
    bitflags = "1.1.0";
    strsim = "0.8.0";
    textwrap = "0.11.0";
    unicode_width = "0.1.5";
    vec_map = "0.8.1";
    ansi_term = "0.11.0";
  };
  deps.cloudabi."0.0.3" = {
    bitflags = "1.1.0";
  };
  deps.derive_error_chain."0.10.1" = {
    quote = "0.3.15";
    syn = "0.11.11";
  };
  deps.diesel."1.4.2" = {
    bigdecimal = "0.1.0";
    bitflags = "1.1.0";
    byteorder = "1.3.2";
    chrono = "0.4.6";
    diesel_derives = "1.4.0";
    ipnetwork = "0.13.1";
    libc = "0.2.58";
    libsqlite3_sys = "0.12.0";
    mysqlclient_sys = "0.2.4";
    num_bigint = "0.2.2";
    num_integer = "0.1.41";
    num_traits = "0.2.8";
    pq_sys = "0.4.6";
    quickcheck = "0.4.1";
    r2d2 = "0.8.5";
    serde_json = "1.0.39";
    time = "0.1.42";
    url = "1.7.2";
    uuid = "0.7.4";
  };
  deps.diesel_cli."1.4.0" = {
    barrel = "0.6.2";
    chrono = "0.4.6";
    clap = "2.33.0";
    diesel = "1.4.2";
    dotenv = "0.10.1";
    heck = "0.3.1";
    libsqlite3_sys = "0.12.0";
    migrations_internals = "1.4.0";
    serde = "1.0.93";
    tempfile = "3.0.8";
    toml = "0.4.10";
    url = "1.7.2";
  };
  deps.diesel_demo_step_1_mysql."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_1_pg."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_1_sqlite."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_2_mysql."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_2_pg."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_2_sqlite."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_3_mysql."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_3_pg."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_demo_step_3_sqlite."0.1.0" = {
    diesel = "1.4.2";
    dotenv = "0.10.1";
  };
  deps.diesel_derives."1.4.0" = {
    proc_macro2 = "0.4.30";
    quote = "0.6.12";
    syn = "0.15.38";
  };
  deps.diesel_infer_schema."1.4.0" = {
    infer_schema_macros = "1.4.0";
  };
  deps.diesel_migrations."1.4.0" = {
    migrations_internals = "1.4.0";
    migrations_macros = "1.4.0";
  };
  deps.diesel_tests."0.1.0" = {
    assert_matches = "1.3.0";
    bigdecimal = "0.1.0";
    chrono = "0.4.6";
    diesel = "1.4.2";
    diesel_infer_schema = "1.4.0";
    diesel_migrations = "1.4.0";
    dotenv = "0.10.1";
    ipnetwork = "0.13.1";
    quickcheck = "0.4.1";
    serde_json = "1.0.39";
    uuid = "0.6.5";
  };
  deps.difference."1.0.0" = {};
  deps.dotenv."0.10.1" = {
    derive_error_chain = "0.10.1";
    error_chain = "0.10.0";
    regex = "0.2.11";
  };
  deps.env_logger."0.3.5" = {
    log = "0.3.9";
    regex = "0.1.80";
  };
  deps.error_chain."0.10.0" = {
    backtrace = "0.3.31";
  };
  deps.fuchsia_cprng."0.1.1" = {};
  deps.gcc."0.3.55" = {};
  deps.heck."0.3.1" = {
    unicode_segmentation = "1.3.0";
  };
  deps.idna."0.1.5" = {
    matches = "0.1.8";
    unicode_bidi = "0.3.4";
    unicode_normalization = "0.1.8";
  };
  deps.infer_schema_internals."1.4.0" = {
    diesel = "1.4.2";
  };
  deps.infer_schema_macros."1.4.0" = {
    dotenv = "0.10.1";
    infer_schema_internals = "1.4.0";
    quote = "0.3.15";
    syn = "0.11.11";
  };
  deps.ipnetwork."0.13.1" = {
    serde = "1.0.93";
    serde_derive = "1.0.93";
  };
  deps.itoa."0.4.4" = {};
  deps.kernel32_sys."0.2.2" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.lazy_static."1.3.0" = {};
  deps.libc."0.2.58" = {};
  deps.libsqlite3_sys."0.12.0" = {
    cc = "1.0.37";
    pkg_config = "0.3.14";
  };
  deps.lock_api."0.2.0" = {
    scopeguard = "1.0.0";
  };
  deps.log."0.3.9" = {
    log = "0.4.6";
  };
  deps.log."0.4.6" = {
    cfg_if = "0.1.9";
  };
  deps.matches."0.1.8" = {};
  deps.memchr."0.1.11" = {
    libc = "0.2.58";
  };
  deps.memchr."2.2.0" = {};
  deps.migrations_internals."1.4.0" = {
    barrel = "0.6.2";
    diesel = "1.4.2";
  };
  deps.migrations_macros."1.4.0" = {
    migrations_internals = "1.4.0";
    quote = "0.6.12";
    syn = "0.15.38";
  };
  deps.mysqlclient_sys."0.2.4" = {
    pkg_config = "0.3.14";
  };
  deps.num_bigint."0.2.2" = {
    num_integer = "0.1.41";
    num_traits = "0.2.8";
  };
  deps.num_integer."0.1.41" = {
    num_traits = "0.2.8";
    autocfg = "0.1.4";
  };
  deps.num_traits."0.2.8" = {
    autocfg = "0.1.4";
  };
  deps.numtoa."0.1.0" = {};
  deps.parking_lot."0.8.0" = {
    lock_api = "0.2.0";
    parking_lot_core = "0.5.0";
    rustc_version = "0.2.3";
  };
  deps.parking_lot_core."0.5.0" = {
    cfg_if = "0.1.9";
    rand = "0.6.5";
    smallvec = "0.6.10";
    rustc_version = "0.2.3";
    cloudabi = "0.0.3";
    redox_syscall = "0.1.54";
    libc = "0.2.58";
    winapi = "0.3.7";
  };
  deps.percent_encoding."1.0.1" = {};
  deps.pkg_config."0.3.14" = {};
  deps.pq_sys."0.4.6" = {};
  deps.proc_macro2."0.4.30" = {
    unicode_xid = "0.1.0";
  };
  deps.quickcheck."0.4.1" = {
    env_logger = "0.3.5";
    log = "0.3.9";
    rand = "0.3.23";
  };
  deps.quote."0.3.15" = {};
  deps.quote."0.6.12" = {
    proc_macro2 = "0.4.30";
  };
  deps.r2d2."0.8.5" = {
    log = "0.4.6";
    parking_lot = "0.8.0";
    scheduled_thread_pool = "0.2.1";
  };
  deps.rand."0.3.23" = {
    libc = "0.2.58";
    rand = "0.4.6";
  };
  deps.rand."0.4.6" = {
    rand_core = "0.3.1";
    rdrand = "0.4.0";
    fuchsia_cprng = "0.1.1";
    libc = "0.2.58";
    winapi = "0.3.7";
  };
  deps.rand."0.6.5" = {
    rand_chacha = "0.1.1";
    rand_core = "0.4.0";
    rand_hc = "0.1.0";
    rand_isaac = "0.1.1";
    rand_jitter = "0.1.4";
    rand_os = "0.1.3";
    rand_pcg = "0.1.2";
    rand_xorshift = "0.1.1";
    autocfg = "0.1.4";
    libc = "0.2.58";
    winapi = "0.3.7";
  };
  deps.rand_chacha."0.1.1" = {
    rand_core = "0.3.1";
    autocfg = "0.1.4";
  };
  deps.rand_core."0.3.1" = {
    rand_core = "0.4.0";
  };
  deps.rand_core."0.4.0" = {};
  deps.rand_hc."0.1.0" = {
    rand_core = "0.3.1";
  };
  deps.rand_isaac."0.1.1" = {
    rand_core = "0.3.1";
  };
  deps.rand_jitter."0.1.4" = {
    rand_core = "0.4.0";
    libc = "0.2.58";
    winapi = "0.3.7";
  };
  deps.rand_os."0.1.3" = {
    rand_core = "0.4.0";
    rdrand = "0.4.0";
    cloudabi = "0.0.3";
    fuchsia_cprng = "0.1.1";
    libc = "0.2.58";
    winapi = "0.3.7";
  };
  deps.rand_pcg."0.1.2" = {
    rand_core = "0.4.0";
    autocfg = "0.1.4";
  };
  deps.rand_xorshift."0.1.1" = {
    rand_core = "0.3.1";
  };
  deps.rdrand."0.4.0" = {
    rand_core = "0.3.1";
  };
  deps.redox_syscall."0.1.54" = {};
  deps.redox_termios."0.1.1" = {
    redox_syscall = "0.1.54";
  };
  deps.regex."0.1.80" = {
    aho_corasick = "0.5.3";
    memchr = "0.1.11";
    regex_syntax = "0.3.9";
    thread_local = "0.2.7";
    utf8_ranges = "0.1.3";
  };
  deps.regex."0.2.11" = {
    aho_corasick = "0.6.10";
    memchr = "2.2.0";
    regex_syntax = "0.5.6";
    thread_local = "0.3.6";
    utf8_ranges = "1.0.3";
  };
  deps.regex_syntax."0.3.9" = {};
  deps.regex_syntax."0.5.6" = {
    ucd_util = "0.1.3";
  };
  deps.remove_dir_all."0.5.2" = {
    winapi = "0.3.7";
  };
  deps.rust_crypto."0.2.36" = {
    libc = "0.2.58";
    rand = "0.3.23";
    rustc_serialize = "0.3.24";
    time = "0.1.42";
    gcc = "0.3.55";
  };
  deps.rustc_demangle."0.1.15" = {};
  deps.rustc_serialize."0.3.24" = {};
  deps.rustc_version."0.2.3" = {
    semver = "0.9.0";
  };
  deps.ryu."0.2.8" = {};
  deps.safemem."0.3.0" = {};
  deps.scheduled_thread_pool."0.2.1" = {
    parking_lot = "0.8.0";
  };
  deps.scopeguard."1.0.0" = {};
  deps.semver."0.9.0" = {
    semver_parser = "0.7.0";
  };
  deps.semver_parser."0.7.0" = {};
  deps.serde."1.0.93" = {
    serde_derive = "1.0.93";
  };
  deps.serde_derive."1.0.93" = {
    proc_macro2 = "0.4.30";
    quote = "0.6.12";
    syn = "0.15.38";
  };
  deps.serde_json."1.0.39" = {
    itoa = "0.4.4";
    ryu = "0.2.8";
    serde = "1.0.93";
  };
  deps.smallvec."0.6.10" = {};
  deps.strsim."0.8.0" = {};
  deps.structopt."0.1.7" = {
    clap = "2.33.0";
  };
  deps.structopt_derive."0.1.6" = {
    quote = "0.3.15";
    syn = "0.11.11";
  };
  deps.syn."0.11.11" = {
    quote = "0.3.15";
    synom = "0.11.3";
    unicode_xid = "0.0.4";
  };
  deps.syn."0.15.38" = {
    proc_macro2 = "0.4.30";
    quote = "0.6.12";
    unicode_xid = "0.1.0";
  };
  deps.synom."0.11.3" = {
    unicode_xid = "0.0.4";
  };
  deps.tempdir."0.3.7" = {
    rand = "0.4.6";
    remove_dir_all = "0.5.2";
  };
  deps.tempfile."2.2.0" = {
    rand = "0.3.23";
    redox_syscall = "0.1.54";
    libc = "0.2.58";
    kernel32_sys = "0.2.2";
    winapi = "0.2.8";
  };
  deps.tempfile."3.0.8" = {
    cfg_if = "0.1.9";
    rand = "0.6.5";
    remove_dir_all = "0.5.2";
    redox_syscall = "0.1.54";
    libc = "0.2.58";
    winapi = "0.3.7";
  };
  deps.termion."1.5.3" = {
    numtoa = "0.1.0";
    libc = "0.2.58";
    redox_syscall = "0.1.54";
    redox_termios = "0.1.1";
  };
  deps.textwrap."0.11.0" = {
    unicode_width = "0.1.5";
  };
  deps.thread_id."2.0.0" = {
    kernel32_sys = "0.2.2";
    libc = "0.2.58";
  };
  deps.thread_local."0.2.7" = {
    thread_id = "2.0.0";
  };
  deps.thread_local."0.3.6" = {
    lazy_static = "1.3.0";
  };
  deps.time."0.1.42" = {
    libc = "0.2.58";
    redox_syscall = "0.1.54";
    winapi = "0.3.7";
  };
  deps.toml."0.4.10" = {
    serde = "1.0.93";
  };
  deps.ucd_util."0.1.3" = {};
  deps.unicode_bidi."0.3.4" = {
    matches = "0.1.8";
  };
  deps.unicode_normalization."0.1.8" = {
    smallvec = "0.6.10";
  };
  deps.unicode_segmentation."1.3.0" = {};
  deps.unicode_width."0.1.5" = {};
  deps.unicode_xid."0.0.4" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.url."1.7.2" = {
    idna = "0.1.5";
    matches = "0.1.8";
    percent_encoding = "1.0.1";
  };
  deps.utf8_ranges."0.1.3" = {};
  deps.utf8_ranges."1.0.3" = {};
  deps.uuid."0.6.5" = {
    cfg_if = "0.1.9";
  };
  deps.uuid."0.7.4" = {};
  deps.vcpkg."0.2.6" = {};
  deps.vec_map."0.8.1" = {};
  deps.winapi."0.2.8" = {};
  deps.winapi."0.3.7" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_build."0.1.1" = {};
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
}
