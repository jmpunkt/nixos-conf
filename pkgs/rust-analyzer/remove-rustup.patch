diff --git a/xtask/src/lib.rs b/xtask/src/lib.rs
index e1472e85d..5dbffc309 100644
--- a/xtask/src/lib.rs
+++ b/xtask/src/lib.rs
@@ -42,14 +42,14 @@ pub fn run_rustfmt(mode: Mode) -> Result<()> {
     ensure_rustfmt()?;
 
     let check = if mode == Mode::Verify { "--check" } else { "" };
-    run!("rustup run {} -- cargo fmt -- {}", TOOLCHAIN, check)?;
+    run!("cargo fmt -- {}", check)?;
     Ok(())
 }
 
 fn reformat(text: impl std::fmt::Display) -> Result<String> {
     ensure_rustfmt()?;
-    let mut rustfmt = Command::new("rustup")
-        .args(&["run", TOOLCHAIN, "--", "rustfmt", "--config-path"])
+    let mut rustfmt = Command::new("rustfmt")
+        .args(&["--config-path"])
         .arg(project_root().join("rustfmt.toml"))
         .stdin(Stdio::piped())
         .stdout(Stdio::piped())
@@ -62,29 +62,26 @@ fn reformat(text: impl std::fmt::Display) -> Result<String> {
 }
 
 fn ensure_rustfmt() -> Result<()> {
-    match Command::new("rustup")
-        .args(&["run", TOOLCHAIN, "--", "cargo", "fmt", "--version"])
+    match Command::new("cargo")
+        .args(&["fmt", "--version"])
         .stderr(Stdio::null())
         .stdout(Stdio::null())
         .status()
     {
         Ok(status) if status.success() => return Ok(()),
-        _ => (),
+        _ => panic!("Rustfmt is not installed."),
     };
-    run!("rustup toolchain install {}", TOOLCHAIN)?;
-    run!("rustup component add rustfmt --toolchain {}", TOOLCHAIN)?;
-    Ok(())
 }
 
 pub fn run_clippy() -> Result<()> {
-    match Command::new("rustup")
-        .args(&["run", TOOLCHAIN, "--", "cargo", "clippy", "--version"])
+    match Command::new("cargo")
+        .args(&["clippy", "--version"])
         .stderr(Stdio::null())
         .stdout(Stdio::null())
         .status()
     {
         Ok(status) if status.success() => (),
-        _ => install_clippy().context("install clippy")?,
+        _ => panic!("Clippy not available"),
     };
 
     let allowed_lints = [
@@ -93,17 +90,7 @@ pub fn run_clippy() -> Result<()> {
         "clippy::nonminimal_bool",
         "clippy::redundant_pattern_matching",
     ];
-    run!(
-        "rustup run {} -- cargo clippy --all-features --all-targets -- -A {}",
-        TOOLCHAIN,
-        allowed_lints.join(" -A ")
-    )?;
-    Ok(())
-}
-
-fn install_clippy() -> Result<()> {
-    run!("rustup toolchain install {}", TOOLCHAIN)?;
-    run!("rustup component add clippy --toolchain {}", TOOLCHAIN)?;
+    run!("cargo clippy --all-features --all-targets -- -A {}", allowed_lints.join(" -A "))?;
     Ok(())
 }
 
